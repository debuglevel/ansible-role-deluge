---
- name: Ensure auth file
  ansible.builtin.file:
    path: "{{ deluge_config_dir }}/auth"
    state: touch
    owner: "{{ deluge_service_user }}"
    group: "{{ deluge_service_group }}"
    mode: u+rw-x,g+rw-x,o-rwx
    modification_time: preserve
    access_time: preserve
  become: true
  tags:
    - deluge
    - deluge_config

- name: Checking if there are Deluge users to be added
  ansible.builtin.lineinfile:
    dest: "{{ deluge_config_dir }}/auth"
    regexp: "^{{ item.name }}:{{ item.password }}:{{ item.access_level }}$"
    line: "{{ item.name }}:{{ item.password }}:{{ item.access_level }}"
    state: present
    owner: "{{ deluge_service_user }}"
    group: "{{ deluge_service_group }}"
    mode: u+rw-x,g+rw-x,o-rwx
  check_mode: true
  register: _deluge_users_to_add
  loop: "{{ deluge_users_to_add }}"
  become: true
  tags:
    - deluge
    - deluge_config

- name: Checking if there are Deluge users to be removed
  ansible.builtin.lineinfile:
    dest: "{{ deluge_config_dir }}/auth"
    regexp: "^{{ item }}"
    state: absent
    owner: "{{ deluge_service_user }}"
    group: "{{ deluge_service_group }}"
    mode: u+rw-x,g+rw-x,o-rwx
  check_mode: true
  register: _deluge_users_to_remove
  loop: "{{ deluge_users_to_remove }}"
  become: true
  tags:
    - deluge
    - deluge_config

- name: Ensure deluged is stopped before adding/removing users. 
  ansible.builtin.service:
    name: deluged
    state: stopped
  when: _deluge_users_to_add.changed or _deluge_users_to_remove.changed
  become: true
  tags:
    - deluge
    - deluge_config

- name: Ensure Deluge users available
  ansible.builtin.lineinfile:
    dest: "{{ deluge_config_dir }}/auth"
    regexp: "^{{ item.name }}:{{ item.password }}:{{ item.access_level }}$"
    line: "{{ item.name }}:{{ item.password }}:{{ item.access_level }}"
    state: present
    owner: "{{ deluge_service_user }}"
    group: "{{ deluge_service_group }}"
    mode: u+rw-x,g+rw-x,o-rwx
    backup: true
  loop: "{{ deluge_users_to_add }}"
  become: true
  notify: Restart deluged
  tags:
    - deluge
    - deluge_config

- name: Ensure deluge users removed
  ansible.builtin.lineinfile:
    dest: "{{ deluge_config_dir }}/auth"
    regexp: "^{{ item }}"
    state: absent
    owner: "{{ deluge_service_user }}"
    group: "{{ deluge_service_group }}"
    mode: u+rw-x,g+rw-x,o-rwx
    backup: true
  loop: "{{ deluge_users_to_remove }}"
  become: true
  notify: Restart deluged
  tags:
    - deluge
    - deluge_config
